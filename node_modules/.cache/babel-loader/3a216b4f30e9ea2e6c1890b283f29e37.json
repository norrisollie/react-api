{"ast":null,"code":"var _jsxFileName = \"/Users/ollienorris/Documents/projects/react-api-calls/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      character: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/people/1\").then(response => response.json()).then(data => {\n      this.setState({\n        character: data\n      });\n    });\n  }\n\n  render() {\n    const name = this.state.character.name;\n    const isLoading = this.state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ollienorris/Documents/projects/react-api-calls/src/App.js"],"names":["React","App","Component","constructor","state","loading","character","componentDidMount","fetch","then","response","json","data","setState","render","name","isLoading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAEM;AADC,OAAd;AAGD,KAND;AAOD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKX,KAAL,CAAWE,SAAX,CAAqBS,IAAlC;AACA,UAAMC,SAAS,GAAG,KAAKZ,KAAL,CAAWC,OAA7B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAzB+B;;AA4BlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: true,\n      character: {}\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://swapi.co/api/people/1\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        character: data\n      })\n    })\n  }\n\n  render() {\n    const name = this.state.character.name\n    const isLoading = this.state.loading\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}